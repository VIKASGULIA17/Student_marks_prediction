{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Slider({\n  className,\n  defaultValue,\n  value,\n  min = 0,\n  max = 100,\n  ...props\n}: React.ComponentProps<typeof SliderPrimitive.Root>) {\n  const _values = React.useMemo(\n    () =>\n      Array.isArray(value)\n        ? value\n        : Array.isArray(defaultValue)\n          ? defaultValue\n          : [min, max],\n    [value, defaultValue, min, max]\n  )\n\n  return (\n    <SliderPrimitive.Root\n      data-slot=\"slider\"\n      defaultValue={defaultValue}\n      value={value}\n      min={min}\n      max={max}\n      className={cn(\n        \"relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col\",\n        className\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track\n        data-slot=\"slider-track\"\n        className={cn(\n          \"bg-muted relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5\"\n        )}\n      >\n        <SliderPrimitive.Range\n          data-slot=\"slider-range\"\n          className={cn(\n            \"bg-primary absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full\"\n          )}\n        />\n      </SliderPrimitive.Track>\n      {Array.from({ length: _values.length }, (_, index) => (\n        <SliderPrimitive.Thumb\n          data-slot=\"slider-thumb\"\n          key={index}\n          className=\"border-primary bg-background ring-ring/50 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50\"\n        />\n      ))}\n    </SliderPrimitive.Root>\n  )\n}\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,CAAC,EACP,MAAM,GAAG,EACT,GAAG,OAC+C;IAClD,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAC1B,IACE,MAAM,OAAO,CAAC,SACV,QACA,MAAM,OAAO,CAAC,gBACZ,eACA;YAAC;YAAK;SAAI,EAClB;QAAC;QAAO;QAAc;QAAK;KAAI;IAGjC,qBACE,8OAAC,kKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,cAAc;QACd,OAAO;QACP,KAAK;QACL,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uOACA;QAED,GAAG,KAAK;;0BAET,8OAAC,kKAAA,CAAA,QAAqB;gBACpB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;0BAGF,cAAA,8OAAC,kKAAA,CAAA,QAAqB;oBACpB,aAAU;oBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;YAIL,MAAM,IAAI,CAAC;gBAAE,QAAQ,QAAQ,MAAM;YAAC,GAAG,CAAC,GAAG,sBAC1C,8OAAC,kKAAA,CAAA,QAAqB;oBACpB,aAAU;oBAEV,WAAU;mBADL;;;;;;;;;;;AAMf","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///home/shino/Documents/GitHub/Student_marks_prediction/Front-end/src/components/student-prediction-form.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Slider } from '@/components/ui/slider'\nimport { Loader2, CheckCircle, AlertCircle, BarChart3 } from 'lucide-react'\n\ninterface FormData {\n  studentId: string\n  age: number\n  gender: string\n  studyHours: number\n  socialMediaHours: number\n  netflixHours: number\n  partTimeJob: string\n  attendance: number\n  sleepHours: number\n  dietQuality: string\n  exerciseFrequency: number\n  parentalEducation: string\n  internetQuality: string\n  mentalHealthRating: number\n  extracurricular: string\n}\n\ninterface PredictionResult {\n  score: number\n  confidence: number\n}\n\nconst initialFormData: FormData = {\n  studentId: '',\n  age: 20,\n  gender: '',\n  studyHours: 6,\n  socialMediaHours: 3,\n  netflixHours: 2,\n  partTimeJob: '',\n  attendance: 85,\n  sleepHours: 8,\n  dietQuality: '',\n  exerciseFrequency: 3,\n  parentalEducation: '',\n  internetQuality: '',\n  mentalHealthRating: 7,\n  extracurricular: ''\n}\n\nexport default function StudentPredictionForm() {\n  const [formData, setFormData] = useState<FormData>(initialFormData)\n  const [isLoading, setIsLoading] = useState(false)\n  const [result, setResult] = useState<PredictionResult | null>(null)\n  const [error, setError] = useState<stringm | null>(null)\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({})\n  const router = useRouter()\n\n  const updateFormData = (field: keyof FormData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n    // Clear validation error when field is updated\n    if (validationErrors[field]) {\n      setValidationErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {}\n    \n    if (!formData.studentId.trim()) {\n      errors.studentId = 'Student ID is required'\n    }\n    if (!formData.gender) {\n      errors.gender = 'Gender is required'\n    }\n    if (!formData.partTimeJob) {\n      errors.partTimeJob = 'Part-time job status is required'\n    }\n    if (!formData.dietQuality) {\n      errors.dietQuality = 'Diet quality is required'\n    }\n    if (!formData.parentalEducation) {\n      errors.parentalEducation = 'Parental education level is required'\n    }\n    if (!formData.internetQuality) {\n      errors.internetQuality = 'Internet quality is required'\n    }\n    if (!formData.extracurricular) {\n      errors.extracurricular = 'Extracurricular participation is required'\n    }\n\n    setValidationErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n  e.preventDefault()\n\n  if (!validateForm()) return\n\n  setIsLoading(true)\n  setError(null)\n  setResult(null)\n\n  try {\n    const response = await fetch('http://localhost:8000/predict', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(formData)\n    })\n\n    if (!response.ok) {\n      throw new Error('API error')\n    }\n\n    const data = await response.json()\n\n    setResult({\n      score: data.predicted_score,\n      confidence: 100  // Optional: your model doesn't output confidence, so use 100 or remove.\n    })\n\n  } catch (err) {\n    console.error(err)\n    setError('Unable to process prediction. Please check your inputs and try again.')\n  } finally {\n    setIsLoading(false)\n  }\n}\n\n  const handleReset = () => {\n    setFormData(initialFormData)\n    setResult(null)\n    setError(null)\n    setValidationErrors({})\n  }\n\n  return (\n    <div className=\"min-h-screen bg-neutral-50 py-12 px-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center gap-3 mb-4\">\n            <BarChart3 className=\"w-8 h-8 text-primary\" />\n            <h1 className=\"text-3xl font-bold text-foreground\">Student Performance Predictor</h1>\n          </div>\n          <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n            Predict your exam score based on lifestyle and study habits\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Personal Information */}\n          <Card className=\"bg-card border-border\">\n            <CardHeader>\n              <CardTitle className=\"text-xl font-semibold text-foreground\">Personal Information</CardTitle>\n              <CardDescription className=\"text-muted-foreground\">\n                Basic demographic information\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"studentId\" className=\"text-sm font-medium text-foreground\">\n                    Student ID\n                  </Label>\n                  <Input\n                    id=\"studentId\"\n                    type=\"text\"\n                    placeholder=\"Enter your student ID\"\n                    value={formData.studentId}\n                    onChange={(e) => updateFormData('studentId', e.target.value)}\n                    className={`bg-background border-input focus:ring-primary focus:border-primary ${\n                      validationErrors.studentId ? 'border-destructive' : ''\n                    }`}\n                  />\n                  {validationErrors.studentId && (\n                    <p className=\"text-sm text-destructive\">{validationErrors.studentId}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"gender\" className=\"text-sm font-medium text-foreground\">\n                    Gender\n                  </Label>\n                  <Select value={formData.gender} onValueChange={(value) => updateFormData('gender', value)}>\n                    <SelectTrigger className={`bg-background border-input focus:ring-primary focus:border-primary ${\n                      validationErrors.gender ? 'border-destructive' : ''\n                    }`}>\n                      <SelectValue placeholder=\"Select gender\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Male\">Male</SelectItem>\n                      <SelectItem value=\"Female\">Female</SelectItem>\n                      <SelectItem value=\"Other\">Other</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  {validationErrors.gender && (\n                    <p className=\"text-sm text-destructive\">{validationErrors.gender}</p>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"age\" className=\"text-sm font-medium text-foreground\">\n                  Age: {formData.age} years\n                </Label>\n                <Slider\n                  id=\"age\"\n                  min={16}\n                  max={25}\n                  step={1}\n                  value={[formData.age]}\n                  onValueChange={(value) => updateFormData('age', value[0])}\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>16</span>\n                  <span>25</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Study & Entertainment */}\n          <Card className=\"bg-card border-border\">\n            <CardHeader>\n              <CardTitle className=\"text-xl font-semibold text-foreground\">Study & Entertainment</CardTitle>\n              <CardDescription className=\"text-muted-foreground\">\n                Time allocation for academic and leisure activities\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"studyHours\" className=\"text-sm font-medium text-foreground\">\n                    Study hours per day: {formData.studyHours} hours\n                  </Label>\n                  <Slider\n                    id=\"studyHours\"\n                    min={0}\n                    max={12}\n                    step={1}\n                    value={[formData.studyHours]}\n                    onValueChange={(value) => updateFormData('studyHours', value[0])}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground\">\n                    <span>0</span>\n                    <span>12</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"socialMediaHours\" className=\"text-sm font-medium text-foreground\">\n                    Social media hours per day: {formData.socialMediaHours} hours\n                  </Label>\n                  <Slider\n                    id=\"socialMediaHours\"\n                    min={0}\n                    max={12}\n                    step={1}\n                    value={[formData.socialMediaHours]}\n                    onValueChange={(value) => updateFormData('socialMediaHours', value[0])}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground\">\n                    <span>0</span>\n                    <span>12</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"netflixHours\" className=\"text-sm font-medium text-foreground\">\n                    Netflix hours per day: {formData.netflixHours} hours\n                  </Label>\n                  <Slider\n                    id=\"netflixHours\"\n                    min={0}\n                    max={12}\n                    step={1}\n                    value={[formData.netflixHours]}\n                    onValueChange={(value) => updateFormData('netflixHours', value[0])}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground\">\n                    <span>0</span>\n                    <span>12</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"partTimeJob\" className=\"text-sm font-medium text-foreground\">\n                    Part-time job\n                  </Label>\n                  <Select value={formData.partTimeJob} onValueChange={(value) => updateFormData('partTimeJob', value)}>\n                    <SelectTrigger className={`bg-background border-input focus:ring-primary focus:border-primary ${\n                      validationErrors.partTimeJob ? 'border-destructive' : ''\n                    }`}>\n                      <SelectValue placeholder=\"Select option\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Yes\">Yes</SelectItem>\n                      <SelectItem value=\"No\">No</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  {validationErrors.partTimeJob && (\n                    <p className=\"text-sm text-destructive\">{validationErrors.partTimeJob}</p>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Health & Lifestyle */}\n          <Card className=\"bg-card border-border\">\n            <CardHeader>\n              <CardTitle className=\"text-xl font-semibold text-foreground\">Health & Lifestyle</CardTitle>\n              <CardDescription className=\"text-muted-foreground\">\n                Physical and mental well-being indicators\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"attendance\" className=\"text-sm font-medium text-foreground\">\n                    Attendance percentage: {formData.attendance}%\n                  </Label>\n                  <Slider\n                    id=\"attendance\"\n                    min={0}\n                    max={100}\n                    step={1}\n                    value={[formData.attendance]}\n                    onValueChange={(value) => updateFormData('attendance', value[0])}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground\">\n                    <span>0%</span>\n                    <span>100%</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"sleepHours\" className=\"text-sm font-medium text-foreground\">\n                    Sleep hours per day: {formData.sleepHours} hours\n                  </Label>\n                  <Slider\n                    id=\"sleepHours\"\n                    min={4}\n                    max={12}\n                    step={1}\n                    value={[formData.sleepHours]}\n                    onValueChange={(value) => updateFormData('sleepHours', value[0])}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground\">\n                    <span>4</span>\n                    <span>12</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"dietQuality\" className=\"text-sm font-medium text-foreground\">\n                    Diet quality\n                  </Label>\n                  <Select value={formData.dietQuality} onValueChange={(value) => updateFormData('dietQuality', value)}>\n                    <SelectTrigger className={`bg-background border-input focus:ring-primary focus:border-primary ${\n                      validationErrors.dietQuality ? 'border-destructive' : ''\n                    }`}>\n                      <SelectValue placeholder=\"Select diet quality\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Poor\">Poor</SelectItem>\n                      <SelectItem value=\"Fair\">Fair</SelectItem>\n                      <SelectItem value=\"Good\">Good</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  {validationErrors.dietQuality && (\n                    <p className=\"text-sm text-destructive\">{validationErrors.dietQuality}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"exerciseFrequency\" className=\"text-sm font-medium text-foreground\">\n                    Exercise frequency: {formData.exerciseFrequency} days/week\n                  </Label>\n                  <Slider\n                    id=\"exerciseFrequency\"\n                    min={0}\n                    max={7}\n                    step={1}\n                    value={[formData.exerciseFrequency]}\n                    onValueChange={(value) => updateFormData('exerciseFrequency', value[0])}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground\">\n                    <span>0</span>\n                    <span>7</span>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Academic Environment */}\n          <Card className=\"bg-card border-border\">\n            <CardHeader>\n              <CardTitle className=\"text-xl font-semibold text-foreground\">Academic Environment</CardTitle>\n              <CardDescription className=\"text-muted-foreground\">\n                Environmental and social factors affecting academic performance\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"parentalEducation\" className=\"text-sm font-medium text-foreground\">\n                    Parental education level\n                  </Label>\n                  <Select value={formData.parentalEducation} onValueChange={(value) => updateFormData('parentalEducation', value)}>\n                    <SelectTrigger className={`bg-background border-input focus:ring-primary focus:border-primary ${\n                      validationErrors.parentalEducation ? 'border-destructive' : ''\n                    }`}>\n                      <SelectValue placeholder=\"Select education level\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"High School\">High School</SelectItem>\n                      <SelectItem value=\"Bachelor\">Bachelor's</SelectItem>\n                      <SelectItem value=\"Master\">Master's</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  {validationErrors.parentalEducation && (\n                    <p className=\"text-sm text-destructive\">{validationErrors.parentalEducation}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"internetQuality\" className=\"text-sm font-medium text-foreground\">\n                    Internet quality\n                  </Label>\n                  <Select value={formData.internetQuality} onValueChange={(value) => updateFormData('internetQuality', value)}>\n                    <SelectTrigger className={`bg-background border-input focus:ring-primary focus:border-primary ${\n                      validationErrors.internetQuality ? 'border-destructive' : ''\n                    }`}>\n                      <SelectValue placeholder=\"Select internet quality\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Poor\">Poor</SelectItem>\n                      <SelectItem value=\"Average\">Average</SelectItem>\n                      <SelectItem value=\"Good\">Good</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  {validationErrors.internetQuality && (\n                    <p className=\"text-sm text-destructive\">{validationErrors.internetQuality}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"mentalHealthRating\" className=\"text-sm font-medium text-foreground\">\n                    Mental health rating: {formData.mentalHealthRating}/10\n                  </Label>\n                  <Slider\n                    id=\"mentalHealthRating\"\n                    min={1}\n                    max={10}\n                    step={1}\n                    value={[formData.mentalHealthRating]}\n                    onValueChange={(value) => updateFormData('mentalHealthRating', value[0])}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground\">\n                    <span>Poor (1)</span>\n                    <span>Excellent (10)</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"extracurricular\" className=\"text-sm font-medium text-foreground\">\n                    Extracurricular participation\n                  </Label>\n                  <Select value={formData.extracurricular} onValueChange={(value) => updateFormData('extracurricular', value)}>\n                    <SelectTrigger className={`bg-background border-input focus:ring-primary focus:border-primary ${\n                      validationErrors.extracurricular ? 'border-destructive' : ''\n                    }`}>\n                      <SelectValue placeholder=\"Select participation level\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Yes\">Yes</SelectItem>\n                      <SelectItem value=\"No\">No</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  {validationErrors.extracurricular && (\n                    <p className=\"text-sm text-destructive\">{validationErrors.extracurricular}</p>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-center gap-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={handleReset}\n              className=\"px-8 py-2 border-border text-foreground hover:bg-accent hover:text-accent-foreground\"\n            >\n              Reset Form\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"px-8 py-2 bg-primary text-primary-foreground hover:bg-primary/90 disabled:opacity-50\"\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Analyzing your data...\n                </>\n              ) : (\n                'Get Prediction'\n              )}\n            </Button>\n          </div>\n        </form>\n\n         {/* Enhanced Results Section */}\n        {(result || error) && (\n          <div className=\"mt-8\">\n            {result && (\n              <Card className=\"bg-gradient-to-br from-emerald-50 to-green-50 border border-emerald-200 shadow-xl\">\n                <CardContent className=\"p-8 text-center\">\n                  <div className=\"flex items-center justify-center gap-2 mb-6\">\n                    <div className=\"p-2 bg-emerald-100 rounded-full\">\n                      <CheckCircle className=\"w-6 h-6 text-emerald-600\" />\n                    </div>\n                    <h3 className=\"text-2xl font-bold text-emerald-800\">Prediction Complete</h3>\n                  </div>\n                  \n                  <div className=\"space-y-6\">\n                    <div className=\"relative\">\n                      <div className=\"text-6xl font-bold bg-gradient-to-r from-emerald-600 to-green-600 bg-clip-text text-transparent\">\n                        {result.score}%\n                      </div>\n                      <p className=\"text-xl text-emerald-700 font-medium mt-2\">\n                        Predicted Exam Score\n                      </p>\n                    </div>\n                    \n                    <div className=\"flex justify-center\">\n                      <div className=\"inline-flex items-center gap-2 px-4 py-2 bg-emerald-100 rounded-full border border-emerald-200\">\n                        <TrendingUp className=\"w-4 h-4 text-emerald-600\" />\n                        <span className=\"text-sm font-medium text-emerald-800\">\n                          Confidence: {result.confidence}%\n                        </span>\n                      </div>\n                    </div>\n\n                    {/* Get Feedback Button */}\n                    <div className=\"pt-4\">\n                      <Button\n                        onClick={handleGetFeedback}\n                        className=\"px-8 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 text-white hover:from-blue-700 hover:to-indigo-700 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\"\n                      >\n                        <Lightbulb className=\"w-4 h-4 mr-2\" />\n                        Get Feedback & Improvement Tips\n                      </Button>\n                    </div>\n\n                    <p className=\"text-sm text-emerald-600/80 mt-4\">\n                      Click above to receive personalized recommendations based on your prediction\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {error && (\n              <Card className=\"bg-gradient-to-br from-red-50 to-pink-50 border border-red-200 shadow-xl\">\n                <CardContent className=\"p-8 text-center\">\n                  <div className=\"flex items-center justify-center gap-2 mb-4\">\n                    <AlertCircle className=\"w-6 h-6 text-red-600\" />\n                    <h3 className=\"text-xl font-semibold text-red-800\">Prediction Failed</h3>\n                  </div>\n                  <p className=\"text-red-700 mb-4\">{error}</p>\n                  <Button\n                    onClick={() => setError(null)}\n                    variant=\"outline\"\n                    className=\"border-red-300 text-red-700 hover:bg-red-50 hover:text-red-800\"\n                  >\n                    Try Again\n                  </Button>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}